# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest
  demands: maven
  

variables:
  ImageName: 'amanirshad7/spring-rest-api'
  clair_db: arminc/clair-db:latest
  clair_scan: arminc/clair-local-scan:v2.1.7_5125fde67edee46cb058a3feee7164af9645e07d
  

#Your build pipeline references an undefined variable named ‘Parameters.mavenPOMFile’.
# Create or edit the build pipeline for this YAML file,
# define the variable on the Variables tab. 
#See https://go.microsoft.com/fwlink/?linkid=865972

steps:
- task: Maven@3
  displayName: 'Maven Build'
  inputs:
    mavenPomFile: 'springboot-rest-api/pom.xml'
    goals: 'clean install'
    jdkVersionOption: 1.11

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: mvndrop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: mvndrop

- task: Docker@2
  displayName: 'Build the Docker image'
  inputs:
    containerRegistry: 'dockerhub_service_connection'
    command: 'buildAndPush'
    dockerFile: '**/Dockerfile'
    repository: '$(ImageName)'
    tags: latest
- script: |
      mkdir report
      docker run -d --name clair-db $(clair_db)
      docker run -p 6060:6060 --link clair-db:postgres -d --name clair $(clair_scan)
      MY_IP=$(ifconfig eth0 | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')
      sleep 10
      CLAIR_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' clair)
      clair-scanner --ip $MY_IP --clair http://$CLAIR_IP:6060 -t High --reportAll=false $(ImageName):latest | tee ./report/clair-image-scan-report.txt
      docker stop clair
      docker rm clair
      docker stop clair-db
      docker rm clair-db
      docker image rm $(clair_db)
  displayName: "Image scan by Clair"
  continueOnError: true