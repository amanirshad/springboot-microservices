# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest
  demands: maven
  

variables:
  ImageName: 'amanirshad7/spring-rest-api:$(Build.BuildId)'
  

#Your build pipeline references an undefined variable named ‘Parameters.mavenPOMFile’.
# Create or edit the build pipeline for this YAML file,
# define the variable on the Variables tab. 
#See https://go.microsoft.com/fwlink/?linkid=865972

steps:
- task: Maven@3
  displayName: 'Maven Build'
  inputs:
    mavenPomFile: 'springboot-rest-api/pom.xml'
    goals: 'clean install'
    jdkVersionOption: 1.11

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: mvndrop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: mvndrop

- task: Docker@2
  displayName: 'Build the Docker image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'dockerhub_service_connection'
    command: 'Build an image'
    dockerFile: '**/Dockerfile'
    imageName: '$(ImageName)'
    includeLatestTag: true
    useDefaultContext: false
    buildContext: '.'
     
- task: Docker@1
  displayName: 'Push the Docker image to Dockerhub'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Docker Hub'
    command: 'Push an image'
    imageName: '$(ImageName)'